class Solution {
public:
    int find_max_window(vector<vector<int>>& grid,int starti,int startj){
        int sum=0;
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                if (!(i == 1 && j != 1)) {
                    sum += grid[starti + i][startj + j];
                }
            }
        }
        return sum;
    }

    int maxSum(vector<vector<int>>& grid) {

        int m=grid.size();
        int n=grid[0].size();
        int maximum=INT_MIN;
        for(int i=0;i<m-2;i++){
            for(int j=0;j<n-2;j++){
                int maxi=find_max_window(grid,i,j);
                maximum=max(maximum,maxi);
            }
        }
        return maximum;
        
    }
};
