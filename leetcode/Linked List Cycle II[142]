/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode detectCycle(ListNode head) {
        ListNode slow=head;
        ListNode fast=head;
     //   ListNode indx=head;
        while( fast!=null  && fast.next !=null ){
        
            slow =slow.next;
            fast=fast.next.next;
            if(slow==fast){
                ListNode indx=head;
                while(slow!=indx){
                    indx=indx.next;
                    slow=slow.next;
                }
                return indx;
            }
          //  return indx;
        }
     
      return null;
    }
}
