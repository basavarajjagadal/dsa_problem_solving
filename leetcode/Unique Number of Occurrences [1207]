class Solution {
public:
    bool uniqueOccurrences(vector<int>& arr) {
        // method-1
        vector<int> ans;
        int size=arr.size();
        sort(arr.begin(),arr.end());
        int i=0;
        while(i<size)
        {
            int count=1;
            for(int j=i+1;j<size;j++)
            {
                if(arr[i]==arr[j])
                {
                    count++;
                }
                else
                {
                    break;
                }

            }
            ans.push_back(count);
            i=i+count;
        }
        size=ans.size();
        sort(ans.begin(),ans.end());
        for(i=0;i<size-1;i++)
        {
            if(ans[i]==ans[i+1])
            {
                return false;
            }
        }
        return true;

        // method-2
        unordered_map<int,int> mp;
        for(auto num:arr){
            mp[num]++;
        }
        unordered_set<int> st;
        for(auto it:mp){
            if(st.count(it.second)){
                return false;
            }
            st.insert(it.second);
        }
        return true;
    }
};
