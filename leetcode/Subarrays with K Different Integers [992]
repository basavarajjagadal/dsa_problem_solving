class Solution {
private:
    int calculate(vector<int>& nums, int k){
        int left=0;
        int right=0;
        int count=0;
        unordered_map<int,int> mpp;
        while(right<nums.size()){
            mpp[nums[right]]++;
            while(mpp.size()>k){
                mpp[nums[left]]--;
                if(mpp[nums[left]]==0){
                    mpp.erase(nums[left]);
                }
                left++;
            }
            count=count+(right-left+1);
            right++;

        }
        return count;
    }

public:
    int subarraysWithKDistinct(vector<int>& nums, int k) {
        return calculate(nums,k)-calculate(nums,k-1);

    }
};
