class Solution {
public:
    vector<vector<int>> kClosest(vector<vector<int>>& points, int k) {

        using T = pair<int, pair<int, int>>;
        priority_queue<T> maxheap;
        int n=points.size();
        int x=0;
        int y=0;
        for(int i=0;i<n;i++){
            int x1=points[i][0];
            int y1=points[i][1];
            int dist = x1 * x1 + y1 * y1;
            maxheap.push({dist,{x1,y1}});
            if(maxheap.size()>k){
                maxheap.pop();
            }
        }
        vector<vector<int>> ans;
        while(!maxheap.empty()){
           ans.push_back({maxheap.top().second.first,maxheap.top().second.second});
           maxheap.pop();
        }
        return ans;
    }
};
