class Solution {
public:
    vector<int> sortedSquares(vector<int>& nums) {
        int left = 0, right = nums.size() - 1;
        vector<int> result(nums.size());
        int index = nums.size() - 1;

        while (left <= right) {
            int leftVal = nums[left] * nums[left];
            int rightVal = nums[right] * nums[right];

            if (leftVal > rightVal) {
                result[index] = leftVal;
                left++;
            } else {
                result[index] = rightVal;
                right--;
            }
            index--;
        }
        return result;
        // it doesnt takes any extra space nut tc =Nlogn
        // int size=nums.size();
        // for(int i=size-1;i>=0;i--){
        //     nums[i]=nums[i]*nums[i];
        // }
        // sort(nums.begin(),nums.end());
        // return nums;

        // it takes extra space
        // vector<int> ans;
        // for(int i =0;i<nums.size();i++){
        //     int a=nums[i]*nums[i];
        //     ans.push_back(a);
        // }
        // sort(ans.begin(),ans.end());
        // return ans;
    }
};
