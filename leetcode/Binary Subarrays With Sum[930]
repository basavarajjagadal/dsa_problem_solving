class Solution {
private:
    int calculate(vector<int>& nums, int goal){
        if(goal<0) return 0;
        int left=0;
        int right=0;
        int n=nums.size();
        int sum=0;
        int count=0;
        while(right<n){
            sum=sum+nums[right];

            while(sum>goal){
                sum-=nums[left];
                left++;
            }
            count=count+(right-left+1);
            right++;
        }
        return count;

    }
public:
    int numSubarraysWithSum(vector<int>& nums, int goal) {
        
        int first=calculate(nums,goal);
        int second=calculate(nums,goal-1);
        int ans=first-second;
        return ans;
        
    }
};
