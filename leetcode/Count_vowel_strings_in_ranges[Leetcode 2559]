class Solution {
public:
    bool isvowel(char ch){
        return ch=='a' || ch=='e' || ch=='i'|| ch=='o'|| ch=='u';
    }
    vector<int> vowelStrings(vector<string>& words, vector<vector<int>>& queries) {
        int n=words.size();
        vector<int> prefix(n+1,0);
        for(int i=0;i<n;i++){
            char l=words[i][0];
            char r=words[i].back();
            prefix[i+1]=prefix[i]+(isvowel(l) && isvowel(r));
        }

        vector<int> result;
        for(auto& q:queries){
            int l=q[0];
            int r=q[1];
            result.push_back(prefix[r+1]-prefix[l]);
        }
        return result;

//Brute force O(n*m)   
    vector<int> result;
    for (auto& q : queries) {  // Iterate over queries
        int count = 0;
        for (int i = q[0]; i <= q[1]; ++i) {  // Iterate over range l to r
            char first = words[i][0], last = words[i].back();
            if (isVowel(first) && isVowel(last)) count++;
        }
        result.push_back(count);
    }

    return result;
        
    }
};
