class Solution {
public:
    string minWindow(string s, string t) {

        int size=t.size();
        unordered_map<char,int> mp;
        for(auto &ch:t){
            mp[ch]++;
        }

        int required=size;
        int l=0;
        int r=0;
        int n=s.size();
        int windowsize=INT_MAX;
        int i_index=0;
        while(r<n){
            char ch=s[r];
            if(mp[ch]>0){
                required--;
            }
            mp[ch]--;
            while(required==0){

                int size=r-l+1;
                if(windowsize>size){
                    windowsize=size;
                    i_index=l;
                }

                mp[s[l]]++;
                if(mp[s[l]]>0){
                    required++;
                }

                l++;
            }
            r++;
        }
        return windowsize==INT_MAX?"":s.substr(i_index,windowsize);
        
        
    }
};
