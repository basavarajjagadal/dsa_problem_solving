class Solution {
public:
    int M=1e9+7;

    int reversefun(int n){
        int rev=0;
        while (n > 0)
        {
            int digit = n % 10;     
            rev = rev * 10 + digit;   
            n /= 10;                
        }
        return rev;
    }
    int countNicePairs(vector<int>& nums) {
        int n=nums.size();
        for(int i=0;i<n;i++){
            int reversed=reversefun(nums[i]);
            nums[i]=nums[i]-reversed;
        }

        unordered_map<int,int> mp;
        int nicepairs=0;
        for(int i=0;i<n;i++){

            if(mp.find(nums[i])!=mp.end()){
                nicepairs=(nicepairs+mp[nums[i]])%M;
            }
            mp[nums[i]]++;

        }
        return nicepairs;
        
    }
};
